.rouletteContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  /* Reducir padding para asegurar que todo quepa en la pantalla */
  padding: 12px; 
  position: relative;
  z-index: 1;
  /* Prevenir barras de desplazamiento completamente */
  overflow: hidden;
  overscroll-behavior: none;
  /* Forzar contención completa */
  box-sizing: border-box;
  /* Establecer altura máxima para evitar desbordamiento */
  max-height: 100vh;
  max-width: 100vw;
  width: 100%;
  height: 100%;
}

/* Variante inline: flujo normal, sin forzar altura completa */
.rouletteContainer[data-variant="inline"] {
  position: static;
  height: auto;
  max-height: none;
  overflow: visible;
  padding-top: 0; /* se puede controlar externamente */
  padding-bottom: 0;
}

/* Reservar espacio superior para títulos / instrucciones */
.rouletteContainer.hasTitle { padding-top: clamp(70px, 12vh, 110px); }
/* Si se aplica un spacing custom via prop (data-has-custom-spacing), no aplicar padding por clase */
.rouletteContainer[data-has-custom-spacing="true"].hasTitle { padding-top: inherit; }

/* Margen superior interno adicional mediante variable para ajustar el wheelWrapper */
.wheelWrapper { --top-offset: 0px; }

/* Si hay título largo encima (clase opcional a añadir en el contenedor externo) */
.rouletteContainer.title-large .wheelWrapper { --top-offset: 34px; }

/* Wrapper adicional para dar colchón al glow y evitar recortes en bordes */
.roulettePad {
  position: relative;
  /* Reducir padding para evitar desbordamiento */
  padding: clamp(8px, 2vw, 20px);
  /* Contener efectos sin generar barras de desplazamiento */
  overflow: clip;
  /* Eliminar la propiedad contain que puede causar problemas */
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
}

.wheelWrapper {
  position: relative;
  /* Tamaño responsivo optimizado para caber en una sola vista sin scroll */
  --wheel-size: clamp(300px, 62vw, 560px);
  /* Ajuste vertical si el puntero invade el título */
  margin-top: var(--top-offset);
  width: var(--wheel-size);
  height: var(--wheel-size);
  /* Asegurar que se mantiene como un círculo perfecto */
  aspect-ratio: 1/1;
  transform-style: preserve-3d;
  perspective: 1000px;
  /* Contener efectos sin desbordamiento */
  overflow: clip;
  /* Eliminar margen que podría causar asimetrías */
  margin: 0;
  /* Centrar el contenido */
  display: flex;
  justify-content: center;
  align-items: center;
}

@media (max-width: 480px) {
  .rouletteContainer {
    padding: 6px 6px 14px;
    /* Permitimos flujo normal para que el contenido anterior no quede solapado */
    height: auto;
    max-height: none;
    overflow: visible;
    position: static;
  }
  /* En móviles: sólo añadimos extra top si NO es variante inline */
  .rouletteContainer:not([data-variant="inline"]) { padding-top: 72px; }
  .rouletteContainer.hasTitle:not([data-variant="inline"]) { padding-top: 90px; }
  .roulettePad {
    padding: clamp(2px, 1vw, 8px);
  }
  .wheelWrapper {
    /* Maximizar rueda en móviles, respetando viewport corto */
    --wheel-size: min(92vw, 88vmin);
    margin-top: calc(var(--top-offset) + 8px);
    /* Importante: mantener aspecto perfectamente circular */
    aspect-ratio: 1/1;
    overflow: clip;
  }
}

/* Micro-breakpoint: dispositivos ultra pequeños o muy bajos (ej. iPhone SE) */
@media (max-width: 380px), (max-height: 680px) {
  /* Ultra pequeños: más espacio todavía (títulos a 2-3 líneas) */
  .rouletteContainer:not([data-variant="inline"]) { padding-top: 88px; }
  .rouletteContainer.hasTitle:not([data-variant="inline"]) { padding-top: 108px; }
  .rouletteContainer.title-large .wheelWrapper { --top-offset: 52px; }
  .wheelWrapper {
    --wheel-size: min(94vw, 86vmin);
    margin-top: calc(var(--top-offset) + 10px);
  }
}

@media (min-width: 1024px) {
  .rouletteContainer {
    height: 100vh;
    width: 100vw;
    max-height: 100vh;
    overflow: hidden;
    position: fixed;
    inset: 0;
    padding-top: 110px; /* más espacio para título en desktop */
  }
  .wheelWrapper {
    /* Tamaño más contenido para asegurar que cabe sin scroll */
    --wheel-size: clamp(420px, 32vw, 550px);
    margin-top: var(--top-offset);
    overflow: clip;
  }
}

.wheel {
  position: absolute;
  inset: 0; /* top:0;right:0;bottom:0;left:0 */
  width: 100%;
  height: 100%;
  border-radius: 50%;
  z-index: 30;
  overflow: visible; /* permitir sombras internas */
  transform-origin: 50% 50%;
  will-change: transform;
  transition: none;
  touch-action: none;
  transform: translateZ(0);
}

/* Transición suave durante el giro */
.wheel.spinning {
  transition: transform 6s cubic-bezier(0.2, 0, 0.2, 1) !important;
  filter: brightness(1.1); /* Hacer la rueda un poco más brillante durante el giro */
  will-change: transform; /* Optimización para animaciones */
  animation: spinGlow 6s ease-out; /* Añadir animación de brillo */
  pointer-events: none; /* Desactivar interacción mientras gira */
  /* Forzar aceleración GPU para animación fluida */
  transform: translateZ(0) rotate(0deg);
}

/* Aplicamos una transición suave cuando no está girando */
.wheel:not(.spinning) {
  transition: transform 0.5s ease-out;
}

/* Efecto de resplandor durante el giro - más contenido para evitar desbordamiento */
.wheelWrapper:has(.wheel.spinning)::after {
  content: "";
  position: absolute;
  /* Reducir tamaño para evitar desbordamiento */
  inset: 10%;
  width: 80%;
  height: 80%;
  border-radius: 50%;
  /* Glow más contenido para evitar scroll */
  box-shadow: 0 0 15px 6px rgba(255,215,0,0.4), 0 0 22px 8px rgba(255,215,0,0.2);
  animation: glowPulse 1.8s infinite alternate;
  z-index: 10;
  pointer-events: none;
  filter: brightness(1.05);
  /* Forzar aceleración GPU y contención */
  transform: translateZ(0);
}

/* Reducir el glow para evitar vibración/scrollbars en móviles pequeños */
@media (max-width: 480px) {
  .wheelWrapper:has(.wheel.spinning)::after {
    /* Versión mínima para móviles para eliminar cualquier desbordamiento */
    inset: 12%;
    width: 76%;
    height: 76%;
    /* Sombra muy reducida para evitar cualquier posible scroll */
    box-shadow: 0 0 8px 4px rgba(255,215,0,0.3), 0 0 15px 6px rgba(255,215,0,0.15);
    animation: glowPulseMobile 2.2s infinite alternate;
    /* Forzar aceleración GPU y contención */
    transform: translateZ(0);
  }
  @keyframes glowPulseMobile {
    0% { opacity: 0.2; box-shadow: 0 0 6px 2px rgba(255,215,0,0.3); }
    50% { opacity: 0.3; box-shadow: 0 0 10px 4px rgba(255,215,0,0.4); }
    100% { opacity: 0.25; box-shadow: 0 0 7px 3px rgba(255,215,0,0.35); }
  }
}

@keyframes glowPulse {
  0% { opacity: 0.25; box-shadow: 0 0 10px 4px rgba(255, 215, 0, 0.4); }
  50% { opacity: 0.4; box-shadow: 0 0 18px 7px rgba(255, 215, 0, 0.6); }
  100% { opacity: 0.5; box-shadow: 0 0 12px 5px rgba(255, 215, 0, 0.5); }
}

@keyframes spinGlow {
  0% { filter: brightness(1); }
  50% { filter: brightness(1.3); }
  100% { filter: brightness(1.1); }
}

/* Estilos eliminados del overlay ya que ahora los manejamos en el SpinButton */

/* Añadimos un reflejo en la ruleta para efecto 3D */
.wheel::before {
  content: '';
  position: absolute;
  top: 5%;
  left: 5%;
  right: 5%;
  bottom: 50%;
  background: linear-gradient(to bottom, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 100%);
  border-radius: 50% 50% 0 0 / 100% 100% 0 0;
  z-index: 1; /* mantener el reflejo por debajo de los textos de segmentos */
  pointer-events: none;
}

