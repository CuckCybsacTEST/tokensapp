{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "dev-server",
			"type": "shell",
			"command": "npm run dev",
			"args": [],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Run smoke spin request",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-Command",
				"$env:BIRTHDAYS_PUBLIC='1'; $env:NEXT_PUBLIC_BIRTHDAYS_ENABLED='1'; echo 'GET status'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3000/api/system/tokens/status' } catch { Write-Host $_; }; echo 'Toggle ON'; try { Invoke-RestMethod -UseBasicParsing -Method Post -Headers @{'Cookie'='session=staff'; 'Content-Type'='application/json'} -Body '{\"enabled\":true}' -Uri 'http://localhost:3000/api/system/tokens/toggle' } catch { Write-Host $_; }; Start-Sleep -Seconds 1; echo 'Check status again'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3000/api/system/tokens/status' } catch { Write-Host $_; }"
			]
		},
		{
			"label": "dev-server",
			"type": "shell",
			"command": "npm run dev",
			"args": [],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "dev-server",
			"type": "shell",
			"command": "npm run dev",
			"args": [],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "dev-server",
			"type": "shell",
			"command": "npm run dev",
			"args": [],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "dev-server",
			"type": "shell",
			"command": "npm run dev",
			"args": [],
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Typecheck TS",
			"type": "shell",
			"command": "npm run -s typecheck",
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run Vitest measurable tasks",
			"type": "shell",
			"command": "npx vitest run -t \"measurable task: metadata present and save derives done by target\"",
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run measurable E2E",
			"type": "shell",
			"command": "npm",
			"args": [
				"run",
				"e2e",
				"--",
				"tests/e2e/checklist-measurable.spec.ts"
			],
			"isBackground": false,
			"problemMatcher": [
				"$eslint-stylish"
			],
			"group": "test"
		},
		{
			"label": "Run measurable E2E",
			"type": "shell",
			"command": "npm",
			"args": [
				"run",
				"e2e",
				"--",
				"tests/e2e/checklist-measurable.spec.ts"
			],
			"isBackground": false,
			"group": "test"
		},
		{
			"label": "Typecheck TS",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Smoke tokens status/toggle",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-Command",
				"$env:BIRTHDAYS_PUBLIC='1'; $env:NEXT_PUBLIC_BIRTHDAYS_ENABLED='1'; echo 'GET status'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3001/api/system/tokens/status' } catch { Write-Host $_; }; echo 'Toggle ON'; try { Invoke-RestMethod -UseBasicParsing -Method Post -Headers @{'Cookie'='session=staff'; 'Content-Type'='application/json'} -Body '{\"enabled\":true}' -Uri 'http://localhost:3001/api/system/tokens/toggle' } catch { Write-Host $_; }; Start-Sleep -Seconds 1; echo 'Check status again'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3001/api/system/tokens/status' } catch { Write-Host $_; }"
			],
			"group": "test"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Run smoke spin request",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-Command",
				"$env:BIRTHDAYS_PUBLIC='1'; $env:NEXT_PUBLIC_BIRTHDAYS_ENABLED='1'; echo 'GET status'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3000/api/system/tokens/status' } catch { Write-Host $_; }; echo 'Toggle ON'; try { Invoke-RestMethod -UseBasicParsing -Method Post -Headers @{'Cookie'='session=staff'; 'Content-Type'='application/json'} -Body '{\"enabled\":true}' -Uri 'http://localhost:3000/api/system/tokens/toggle' } catch { Write-Host $_; }; Start-Sleep -Seconds 1; echo 'Check status again'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3000/api/system/tokens/status' } catch { Write-Host $_; }"
			]
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Run dev-server",
			"type": "shell",
			"command": "npm run dev",
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc) - cron bypass check",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck orphan prizes",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck purge ui",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck final purge integration",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck retry",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck final",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck final 2",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "adhoc typecheck clean",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Install deps",
			"type": "shell",
			"command": "npm ci",
			"group": "build"
		},
		{
			"label": "Prisma migrate deploy (or push)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-Command",
				"try { npx prisma migrate deploy } catch { Write-Host $_; exit 1 }; if ($LASTEXITCODE -ne 0) { Write-Host 'migrate failed; trying db push'; try { npx prisma db push } catch { Write-Host $_; exit 1 } }"
			],
			"group": "build"
		},
		{
			"label": "Prisma migrate deploy",
			"type": "shell",
			"command": "npx prisma migrate deploy",
			"problemMatcher": [
				"$tsc"
			],
			"group": "build"
		},
		{
			"label": "Run dev-server",
			"type": "shell",
			"command": "npm run dev",
			"isBackground": true,
			"group": "build"
		},
		{
			"label": "Run smoke spin request",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-Command",
				"$env:BIRTHDAYS_PUBLIC='1'; $env:NEXT_PUBLIC_BIRTHDAYS_ENABLED='1'; echo 'GET status'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3000/api/system/tokens/status' } catch { Write-Host $_; }; echo 'Toggle ON'; try { Invoke-RestMethod -UseBasicParsing -Method Post -Headers @{'Cookie'='session=staff'; 'Content-Type'='application/json'} -Body '{\"enabled\":true}' -Uri 'http://localhost:3000/api/system/tokens/toggle' } catch { Write-Host $_; }; Start-Sleep -Seconds 1; echo 'Check status again'; try { Invoke-RestMethod -UseBasicParsing -Uri 'http://localhost:3000/api/system/tokens/status' } catch { Write-Host $_; }"
			]
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		},
		{
			"label": "Typecheck TS (adhoc) via npm",
			"type": "shell",
			"command": "npm run -s typecheck"
		},
		{
			"label": "Typecheck TS (adhoc)",
			"type": "shell",
			"command": "npm run -s typecheck",
			"group": "build"
		}
	]
}